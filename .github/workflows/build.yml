name: Build and Release

on:
  workflow_call:
  push:
    # branches: [main]
  pull_request:

jobs:

  complete:
    if: always()
    needs:
    - build-cargo-workspaces
    - build-cargo-hack
    - build-cargo-set-rust-version
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1

  build-cargo-workspaces:
    strategy:
      matrix:
        sys:
        - os: ubuntu-latest
        - os: macos-latest
        - os: windows-latest
    runs-on: ${{ matrix.sys.os }}
    steps:
    - uses: actions/checkout@v3
    - run: rustup update
    # - uses: stellar/actions/rust-cache@main
    - run: cargo install --target-dir ~/.cargo/target --root . --locked --version 0.2.35 cargo-workspaces
    - uses: actions/upload-artifact@v3
      with:
        name: cargo-workspaces-${{ matrix.sys.os }}
        path: ./bin/cargo-workspaces*

  build-cargo-hack:
    strategy:
      matrix:
        sys:
        - os: ubuntu-latest
        - os: macos-latest
        - os: windows-latest
    runs-on: ${{ matrix.sys.os }}
    steps:
    - uses: actions/checkout@v3
    # - uses: stellar/actions/rust-cache@main
    - run: rustup update
    - run: cargo install --target-dir ~/.cargo/target --root . --locked --version 0.5.16 cargo-hack
    - uses: actions/upload-artifact@v3
      with:
        name: cargo-hack-${{ matrix.sys.os }}
        path: ./bin/cargo-hack*

  build-cargo-set-rust-version:
    strategy:
      matrix:
        sys:
        - os: ubuntu-latest
    runs-on: ${{ matrix.sys.os }}
    steps:
    - uses: actions/checkout@v3
    # - uses: stellar/actions/rust-cache@main
    - run: rustup update
    - run: cargo install --target-dir ~/.cargo/target --root . --locked --version 0.5.0 cargo-set-rust-version
    - uses: actions/upload-artifact@v3
      with:
        name: cargo-set-rust-version-${{ matrix.sys.os }}
        path: ./bin/cargo-set-rust-version*

  release-create:
    # if: github.ref_name == 'main'
    needs: complete
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - id: set-tag
      run: echo "tag=v$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT
    - run: gh release -R ${{ github.repository }} create --generate-notes --target ${{ github.sha }} "${{ steps.set-tag.outputs.tag }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      tag: ${{ steps.set-tag.outputs.tag }}

  release-upload:
    # if: github.ref_name == 'main'
    needs: release-create
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
    - run: find * -maxdepth 0 -not -path '*/.*' -type d -print0 | xargs -0 -I{} tar cvfz {}.tar.gz -C {} .
    - run: gh release -R ${{ github.repository }} upload --clobber "${{ needs.release-create.outputs.tag }}" *.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
